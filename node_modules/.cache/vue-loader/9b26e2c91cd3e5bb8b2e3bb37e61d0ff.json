{"remainingRequest":"/home/doums/Documents/quiz/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/doums/Documents/quiz/src/components/QuestionBox.vue?vue&type=style&index=0&id=62ab2b85&scoped=true&lang=css&","dependencies":[{"path":"/home/doums/Documents/quiz/src/components/QuestionBox.vue","mtime":1572119491861},{"path":"/home/doums/Documents/quiz/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/doums/Documents/quiz/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/doums/Documents/quiz/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/doums/Documents/quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/doums/Documents/quiz/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5saXN0LWdyb3VwIHsKICBtYXJnaW4tYm90dG9tOiAxNXB4Owp9CgoubGlzdC1ncm91cC1pdGVtOmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWVlOwogIGN1cnNvcjogcG9pbnRlcjsKfQoKLmJ0biB7CiAgbWFyZ2luOiAwIDVweDsKfQoKLnNlbGVjdGVkIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7Cn0KCi5jb3JyZWN0IHsKICBiYWNrZ3JvdW5kLWNvbG9yOmxpZ2h0Z3JlZW47Cn0KCi5pbmNvcnJlY3QgewogIGJhY2tncm91bmQtY29sb3I6cmVkOwp9Cgo="},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n      <b-jumbotron>\n        <template v-slot:lead>\n          {{ currentQuestion.question }}\n        </template>\n\n        <hr class=\"my-4\">\n        <b-list-group>\n          <b-list-group-item \n            v-for=\"(answer, index) in answers\"\n            :key=\"index\"\n            @click.prevent=\"selectAnswer(index)\"\n            :class=\"answerClass(index)\"\n          >\n              {{ answer }}\n          </b-list-group-item>\n        </b-list-group>\n        <b-button variant=\"primary\"\n          @click=\"submitAnswer\"\n          :disabled=\"selectedIndex === null || answered\"\n        >\n          Submit</b-button>\n        <b-button @click=\"next\" variant=\"success\">Next</b-button>\n      </b-jumbotron>\n    </div>\n</template>\n\n<script>\nimport _ from 'lodash'\n\nexport default {\n  props: {\n    currentQuestion: Object,\n    next: Function,\n    increment: Function\n  },\n  data() {\n    return {\n      selectedIndex: null,\n      correctIndex: null,\n      shuffledAnswers: [], \n      answered: false\n    }\n  },\n  computed: {\n    answers() {\n      let answers = [...this.currentQuestion.incorrect_answers]\n      answers.push(this.currentQuestion.correct_answer)\n      return answers\n    }\n  },\n  watch: {\n    currentQuestion: {\n      immediate: true,\n      handler() {\n        this.selectedIndex = null\n        this.answered = false\n        this.shuffleAnswers()\n      }\n    }\n  },\n  methods: {\n    selectAnswer(index) {\n      this.selectedIndex = index\n      console.log(index)\n    },\n    submitAnswer() {\n      let isCorrect = false\n      if(this.selectedIndex === this.correctIndex) {\n        isCorrect = true\n      }\n      this.answered = true\n\n      this.increment(isCorrect)\n    },\n    shuffleAnswers() {\n      let answers = [...this.currentQuestion.incorrect_answers, this.currentQuestion.correct_answer]\n      this.shuffledAnswers = _.shuffle(answers)\n      this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer)\n    },\n    answerClass(index) {\n      let answerClass = ''\n\n      if(!this.answered && this.selectedIndex === index) {\n        answerClass = 'selected'\n      } else if(this.answered && this.correctIndex === index) {\n        answerClass = 'correct'\n      } else if(this.answered && this.selectedIndex === index && this.correctIndex !== index) {\n        answerClass = 'incorrect'\n      }\n\n      return answerClass\n    }\n  }\n}\n</script>\n\n<style scoped>\n  \n  .list-group {\n    margin-bottom: 15px;\n  }\n\n  .list-group-item:hover {\n    background-color: #eee;\n    cursor: pointer;\n  }\n  \n  .btn {\n    margin: 0 5px;\n  }\n\n  .selected {\n    background-color: lightblue;\n  }\n\n  .correct {\n    background-color:lightgreen;\n  }\n\n  .incorrect {\n    background-color:red;\n  }\n\n</style>\n"]}]}